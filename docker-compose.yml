version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: book-registry-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - book-registry-network
    depends_on:
      - db
  nginx:
    image: nginx:alpine
    container_name: book-registry-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - book-registry-network
    depends_on:
      - app
  db:
    image: mysql:8.0
    container_name: book-registry-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: book_registry
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./docker/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - book-registry-network
  node:
    image: node:20
    container_name: book-registry-node
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev"
    networks:
      - book-registry-network

networks:
  book-registry-network:
    driver: bridge 